# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4.0.0

    - name: Configure GPG
      env:
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      run: |
        echo "$SIGNING_KEY" | gpg --dearmor > ${HOME}/secring.gpg

    - name: Add Gradle Properties
      env:
        MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
        MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      run: |
        echo "mavenCentralUsername=${MAVEN_CENTRAL_USERNAME}" >> gradle.properties
        echo "mavenCentralPassword=${MAVEN_CENTRAL_PASSWORD}" >> gradle.properties
        echo "signing.keyId=${SIGNING_KEY_ID}" >> gradle.properties
        echo "signing.password=${SIGNING_KEY_PASSWORD}" >> gradle.properties
        echo "signing.secretKeyRingFile=${HOME}/secring.gpg" >> gradle.properties

    - name: Publish To Maven Central
      run: |
        ./gradlew publishAndReleaseToMavenCentral --no-configuration-cache
